{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n} // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nvar keyPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities,\n          treeData = _this$state.treeData;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n      var flattenNodes = flattenTreeData(treeData, newExpandedKeys);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities),\n        expandedKeys: newExpandedKeys,\n        flattenNodes: flattenNodes\n      });\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: convertNodePropsToEventData(_this.dragNode.props),\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var treeData = _this.state.treeData;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Update selected keys\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n          _this.setUncontrolledState({\n            flattenNodes: newFlattenTreeData\n          });\n        }) : null;\n      }\n\n      return null;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps), {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread({}, newState, {}, forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(keyPropType),\n  expandedKeys: PropTypes.arrayOf(keyPropType),\n  defaultCheckedKeys: PropTypes.arrayOf(keyPropType),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(keyPropType), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(keyPropType),\n  selectedKeys: PropTypes.arrayOf(keyPropType),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(keyPropType),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  motion: PropTypes.object,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\npolyfill(Tree);\nexport default Tree;","map":{"version":3,"sources":["/Users/russell/code/soulfire/soulfire/node_modules/rc-tree/es/Tree.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","toString","call","slice","name","Array","from","test","iter","isArray","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","Super","_getPrototypeOf","result","_isNativeReflectConstruct","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","e","getPrototypeOf","React","PropTypes","KeyCode","warning","classNames","polyfill","TreeContext","getDataAndAria","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","keyPropType","oneOfType","string","number","Tree","_React$Component","_super","_this","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragNodesKeys","dragOverNodeKey","dropPosition","treeData","flattenNodes","focused","activeKey","prevProps","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","eventKey","dragNode","newExpandedKeys","setState","onNodeDragEnter","_this$state2","onDragEnter","_node$props","pos","indexOf","setTimeout","delayedDragEnterLogic","clearTimeout","window","entity","children","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","cleanDragState","onNodeDrop","_this$state3","_this$state3$dragNode","onDrop","_node$props2","posArr","dropResult","Number","dropToGap","onNodeClick","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state4","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","concat","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","checkedNodesPositions","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state5","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this$props4","onExpand","expanded","index","targetExpanded","loadPromise","newFlattenTreeData","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","getTreeNodeRequiredProps","_this$state6","newActiveKey","scrollTo","getActiveItem","_this$state7","find","_ref2","data","offsetActiveKey","offset","_this$state8","findIndex","_ref3","item","onKeyDown","_this$state9","_this$props5","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","active","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","undefined","forceState","needSync","allPassed","newState","scroll","current","render","_classNames","_this$state10","_this$props6","prefixCls","className","style","showLine","focusable","_this$props6$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","domProps","createElement","Provider","assign","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","propTypes","any","array","bool","func","arrayOf","defaultProps"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyB1B,GAAzB,EAA8ByB,GAA9B,EAAmCK,KAAnC,EAA0C;AAAE,MAAIL,GAAG,IAAIzB,GAAX,EAAgB;AAAES,IAAAA,MAAM,CAACoB,cAAP,CAAsB7B,GAAtB,EAA2ByB,GAA3B,EAAgC;AAAEK,MAAAA,KAAK,EAAEA,KAAT;AAAgBf,MAAAA,UAAU,EAAE,IAA5B;AAAkCgB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEhC,IAAAA,GAAG,CAACyB,GAAD,CAAH,GAAWK,KAAX;AAAmB;;AAAC,SAAO9B,GAAP;AAAa;;AAEjN,SAASiC,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFI,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGlC,MAAM,CAACL,SAAP,CAAiBwC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,EAAkCM,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIH,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACrC,WAAxB,EAAqCwC,CAAC,GAAGH,CAAC,CAACrC,WAAF,CAAc4C,IAAlB;AAAwB,MAAIJ,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOK,KAAK,CAACC,IAAN,CAAWN,CAAX,CAAP;AAAsB,MAAIA,CAAC,KAAK,WAAN,IAAqB,2CAA2CO,IAA3C,CAAgDP,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASL,gBAAT,CAA0Be,IAA1B,EAAgC;AAAE,MAAI,OAAOlD,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAP,IAAmBO,MAAM,CAAC0C,IAAD,CAA9D,EAAsE,OAAOH,KAAK,CAACC,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAElI,SAAShB,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIc,KAAK,CAACI,OAAN,CAAclB,GAAd,CAAJ,EAAwB,OAAOQ,iBAAiB,CAACR,GAAD,CAAxB;AAAgC;;AAE3F,SAASQ,iBAAT,CAA2BR,GAA3B,EAAgCmB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGnB,GAAG,CAACZ,MAA7B,EAAqC+B,GAAG,GAAGnB,GAAG,CAACZ,MAAV;;AAAkB,OAAK,IAAIF,CAAC,GAAG,CAAR,EAAWkC,IAAI,GAAG,IAAIN,KAAJ,CAAUK,GAAV,CAAvB,EAAuCjC,CAAC,GAAGiC,GAA3C,EAAgDjC,CAAC,EAAjD,EAAqD;AAAEkC,IAAAA,IAAI,CAAClC,CAAD,CAAJ,GAAUc,GAAG,CAACd,CAAD,CAAb;AAAmB;;AAAC,SAAOkC,IAAP;AAAc;;AAEvL,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIlB,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASmB,iBAAT,CAA2BvC,MAA3B,EAAmCwC,KAAnC,EAA0C;AAAE,OAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,KAAK,CAACrC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AAAE,QAAIwC,UAAU,GAAGD,KAAK,CAACvC,CAAD,CAAtB;AAA2BwC,IAAAA,UAAU,CAAC7C,UAAX,GAAwB6C,UAAU,CAAC7C,UAAX,IAAyB,KAAjD;AAAwD6C,IAAAA,UAAU,CAAC7B,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAW6B,UAAf,EAA2BA,UAAU,CAAC5B,QAAX,GAAsB,IAAtB;AAA4BvB,IAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8ByC,UAAU,CAACnC,GAAzC,EAA8CmC,UAA9C;AAA4D;AAAE;;AAE7T,SAASC,YAAT,CAAsBJ,WAAtB,EAAmCK,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBJ,iBAAiB,CAACD,WAAW,CAACrD,SAAb,EAAwB0D,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBL,iBAAiB,CAACD,WAAD,EAAcM,WAAd,CAAjB;AAA6C,SAAON,WAAP;AAAqB;;AAEvN,SAASO,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAI3B,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAAC0B,EAAAA,QAAQ,CAAC7D,SAAT,GAAqBK,MAAM,CAAC0D,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAC9D,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAE2B,MAAAA,KAAK,EAAEmC,QAAT;AAAmBjC,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAImC,UAAJ,EAAgBE,eAAe,CAACH,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASE,eAAT,CAAyB5B,CAAzB,EAA4B6B,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAG3D,MAAM,CAAC6D,cAAP,IAAyB,SAASF,eAAT,CAAyB5B,CAAzB,EAA4B6B,CAA5B,EAA+B;AAAE7B,IAAAA,CAAC,CAAC+B,SAAF,GAAcF,CAAd;AAAiB,WAAO7B,CAAP;AAAW,GAAxG;;AAA0G,SAAO4B,eAAe,CAAC5B,CAAD,EAAI6B,CAAJ,CAAtB;AAA+B;;AAE1K,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,SAAO,YAAY;AAAE,QAAIC,KAAK,GAAGC,eAAe,CAACF,OAAD,CAA3B;AAAA,QAAsCG,MAAtC;;AAA8C,QAAIC,yBAAyB,EAA7B,EAAiC;AAAE,UAAIC,SAAS,GAAGH,eAAe,CAAC,IAAD,CAAf,CAAsBxE,WAAtC;;AAAmDyE,MAAAA,MAAM,GAAGG,OAAO,CAACC,SAAR,CAAkBN,KAAlB,EAAyBrD,SAAzB,EAAoCyD,SAApC,CAAT;AAA0D,KAAhJ,MAAsJ;AAAEF,MAAAA,MAAM,GAAGF,KAAK,CAACzD,KAAN,CAAY,IAAZ,EAAkBI,SAAlB,CAAT;AAAwC;;AAAC,WAAO4D,0BAA0B,CAAC,IAAD,EAAOL,MAAP,CAAjC;AAAkD,GAAtT;AAAyT;;AAE1V,SAASK,0BAAT,CAAoCC,IAApC,EAA0CrC,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAK9C,OAAO,CAAC8C,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOsC,sBAAsB,CAACD,IAAD,CAA7B;AAAsC;;AAEjL,SAASC,sBAAT,CAAgCD,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOF,IAAP;AAAc;;AAEtK,SAASL,yBAAT,GAAqC;AAAE,MAAI,OAAOE,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAID,OAAO,CAACC,SAAR,CAAkBK,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,IAAI,CAACnF,SAAL,CAAewC,QAAf,CAAwBC,IAAxB,CAA6BkC,OAAO,CAACC,SAAR,CAAkBO,IAAlB,EAAwB,EAAxB,EAA4B,YAAY,CAAE,CAA1C,CAA7B;AAA2E,WAAO,IAAP;AAAc,GAA/F,CAAgG,OAAOC,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEpU,SAASb,eAAT,CAAyBnC,CAAzB,EAA4B;AAAEmC,EAAAA,eAAe,GAAGlE,MAAM,CAAC6D,cAAP,GAAwB7D,MAAM,CAACgF,cAA/B,GAAgD,SAASd,eAAT,CAAyBnC,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAAC+B,SAAF,IAAe9D,MAAM,CAACgF,cAAP,CAAsBjD,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOmC,eAAe,CAACnC,CAAD,CAAtB;AAA4B,C,CAE7M;AACA;;;AACA,OAAO,KAAKkD,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,gBAA3C,EAA6DC,mBAA7D,EAAkFC,gBAAlF,EAAoGC,gBAApG,EAAsHC,MAAtH,EAA8HC,MAA9H,EAAsIC,QAAtI,QAAsJ,QAAtJ;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,qBAA7C,EAAoEC,iBAApE,EAAuFC,2BAAvF,EAAoHC,gBAApH,QAA4I,kBAA5I;AACA,OAAOC,QAAP,IAAmBC,UAAnB,EAA+BC,YAA/B,QAAmD,YAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,IAAIC,WAAW,GAAG1B,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAAC4B,MAAX,EAAmB5B,SAAS,CAAC6B,MAA7B,CAApB,CAAlB;;AAEA,IAAIC,IAAI,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AAClD1D,EAAAA,SAAS,CAACyD,IAAD,EAAOC,gBAAP,CAAT;;AAEA,MAAIC,MAAM,GAAGnD,YAAY,CAACiD,IAAD,CAAzB;;AAEA,WAASA,IAAT,GAAgB;AACd,QAAIG,KAAJ;;AAEArE,IAAAA,eAAe,CAAC,IAAD,EAAOkE,IAAP,CAAf;;AAEAG,IAAAA,KAAK,GAAGD,MAAM,CAAC1G,KAAP,CAAa,IAAb,EAAmBI,SAAnB,CAAR;AACAuG,IAAAA,KAAK,CAACC,KAAN,GAAc;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,YAAY,EAAE,EAFF;AAGZC,MAAAA,WAAW,EAAE,EAHD;AAIZC,MAAAA,eAAe,EAAE,EAJL;AAKZC,MAAAA,UAAU,EAAE,EALA;AAMZC,MAAAA,WAAW,EAAE,EAND;AAOZC,MAAAA,YAAY,EAAE,EAPF;AAQZC,MAAAA,QAAQ,EAAE,KARE;AASZC,MAAAA,aAAa,EAAE,EATH;AAUZC,MAAAA,eAAe,EAAE,IAVL;AAWZC,MAAAA,YAAY,EAAE,IAXF;AAYZC,MAAAA,QAAQ,EAAE,EAZE;AAaZC,MAAAA,YAAY,EAAE,EAbF;AAcZC,MAAAA,OAAO,EAAE,KAdG;AAeZC,MAAAA,SAAS,EAAE,IAfC;AAgBZC,MAAAA,SAAS,EAAE;AAhBC,KAAd;AAkBAjB,IAAAA,KAAK,CAACkB,OAAN,GAAgBpD,KAAK,CAACqD,SAAN,EAAhB;;AAEAnB,IAAAA,KAAK,CAACoB,eAAN,GAAwB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AAC7C,UAAIC,WAAW,GAAGvB,KAAK,CAACC,KAAxB;AAAA,UACIO,YAAY,GAAGe,WAAW,CAACf,YAD/B;AAAA,UAEIN,WAAW,GAAGqB,WAAW,CAACrB,WAF9B;AAAA,UAGIW,QAAQ,GAAGU,WAAW,CAACV,QAH3B;AAIA,UAAIW,WAAW,GAAGxB,KAAK,CAACjE,KAAN,CAAYyF,WAA9B;AACA,UAAIC,QAAQ,GAAGH,IAAI,CAACvF,KAAL,CAAW0F,QAA1B;AACAzB,MAAAA,KAAK,CAAC0B,QAAN,GAAiBJ,IAAjB;AACA,UAAIK,eAAe,GAAG/C,MAAM,CAAC4B,YAAD,EAAeiB,QAAf,CAA5B;AACA,UAAIX,YAAY,GAAGhC,eAAe,CAAC+B,QAAD,EAAWc,eAAX,CAAlC;;AAEA3B,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbnB,QAAAA,QAAQ,EAAE,IADG;AAEbC,QAAAA,aAAa,EAAEpC,gBAAgB,CAACmD,QAAD,EAAWvB,WAAX,CAFlB;AAGbM,QAAAA,YAAY,EAAEmB,eAHD;AAIbb,QAAAA,YAAY,EAAEA;AAJD,OAAf;;AAOA,UAAIU,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAAC;AACVH,UAAAA,KAAK,EAAEA,KADG;AAEVC,UAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN;AAFvB,SAAD,CAAX;AAID;AACF,KAxBD;AAyBA;;;;;;;;;AASAiE,IAAAA,KAAK,CAAC6B,eAAN,GAAwB,UAAUR,KAAV,EAAiBC,IAAjB,EAAuB;AAC7C,UAAIQ,YAAY,GAAG9B,KAAK,CAACC,KAAzB;AAAA,UACIO,YAAY,GAAGsB,YAAY,CAACtB,YADhC;AAAA,UAEIN,WAAW,GAAG4B,YAAY,CAAC5B,WAF/B;AAAA,UAGIQ,aAAa,GAAGoB,YAAY,CAACpB,aAHjC;AAIA,UAAIqB,WAAW,GAAG/B,KAAK,CAACjE,KAAN,CAAYgG,WAA9B;AACA,UAAIC,WAAW,GAAGV,IAAI,CAACvF,KAAvB;AAAA,UACIkG,GAAG,GAAGD,WAAW,CAACC,GADtB;AAAA,UAEIR,QAAQ,GAAGO,WAAW,CAACP,QAF3B;AAGA,UAAI,CAACzB,KAAK,CAAC0B,QAAP,IAAmBhB,aAAa,CAACwB,OAAd,CAAsBT,QAAtB,MAAoC,CAAC,CAA5D,EAA+D;AAC/D,UAAIb,YAAY,GAAGlC,gBAAgB,CAAC2C,KAAD,EAAQC,IAAR,CAAnC,CAV6C,CAUK;;AAElD,UAAItB,KAAK,CAAC0B,QAAN,CAAe3F,KAAf,CAAqB0F,QAArB,KAAkCA,QAAlC,IAA8Cb,YAAY,KAAK,CAAnE,EAAsE;AACpEZ,QAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbjB,UAAAA,eAAe,EAAE,EADJ;AAEbC,UAAAA,YAAY,EAAE;AAFD,SAAf;;AAKA;AACD,OAnB4C,CAmB3C;AACF;AACA;AACA;AACA;;;AAGAuB,MAAAA,UAAU,CAAC,YAAY;AACrB;AACAnC,QAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbjB,UAAAA,eAAe,EAAEc,QADJ;AAEbb,UAAAA,YAAY,EAAEA;AAFD,SAAf,EAFqB,CAKjB;;;AAGJ,YAAI,CAACZ,KAAK,CAACoC,qBAAX,EAAkC;AAChCpC,UAAAA,KAAK,CAACoC,qBAAN,GAA8B,EAA9B;AACD;;AAEDvJ,QAAAA,MAAM,CAACD,IAAP,CAAYoH,KAAK,CAACoC,qBAAlB,EAAyCxI,OAAzC,CAAiD,UAAUC,GAAV,EAAe;AAC9DwI,UAAAA,YAAY,CAACrC,KAAK,CAACoC,qBAAN,CAA4BvI,GAA5B,CAAD,CAAZ;AACD,SAFD;AAGAmG,QAAAA,KAAK,CAACoC,qBAAN,CAA4BH,GAA5B,IAAmCK,MAAM,CAACH,UAAP,CAAkB,YAAY;AAC/D,cAAI,CAACnC,KAAK,CAACC,KAAN,CAAYQ,QAAjB,EAA2B;;AAE3B,cAAIkB,eAAe,GAAGtH,kBAAkB,CAACmG,YAAD,CAAxC;;AAEA,cAAI+B,MAAM,GAAGrC,WAAW,CAACuB,QAAD,CAAxB;;AAEA,cAAIc,MAAM,IAAI,CAACA,MAAM,CAACC,QAAP,IAAmB,EAApB,EAAwB9I,MAAtC,EAA8C;AAC5CiI,YAAAA,eAAe,GAAGhD,MAAM,CAAC6B,YAAD,EAAeiB,QAAf,CAAxB;AACD;;AAED,cAAI,EAAE,kBAAkBzB,KAAK,CAACjE,KAA1B,CAAJ,EAAsC;AACpCiE,YAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbpB,cAAAA,YAAY,EAAEmB;AADD,aAAf;AAGD;;AAED,cAAII,WAAJ,EAAiB;AACfA,YAAAA,WAAW,CAAC;AACVV,cAAAA,KAAK,EAAEA,KADG;AAEVC,cAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN,CAFvB;AAGVyE,cAAAA,YAAY,EAAEmB;AAHJ,aAAD,CAAX;AAKD;AACF,SAxBkC,EAwBhC,GAxBgC,CAAnC;AAyBD,OAxCS,EAwCP,CAxCO,CAAV;AAyCD,KAnED;;AAqEA3B,IAAAA,KAAK,CAACyC,cAAN,GAAuB,UAAUpB,KAAV,EAAiBC,IAAjB,EAAuB;AAC5C,UAAIZ,aAAa,GAAGV,KAAK,CAACC,KAAN,CAAYS,aAAhC;AACA,UAAIgC,UAAU,GAAG1C,KAAK,CAACjE,KAAN,CAAY2G,UAA7B;AACA,UAAIjB,QAAQ,GAAGH,IAAI,CAACvF,KAAL,CAAW0F,QAA1B;;AAEA,UAAIf,aAAa,CAACwB,OAAd,CAAsBT,QAAtB,MAAoC,CAAC,CAAzC,EAA4C;AAC1C;AACD,OAP2C,CAO1C;;;AAGF,UAAIzB,KAAK,CAAC0B,QAAN,IAAkBD,QAAQ,KAAKzB,KAAK,CAACC,KAAN,CAAYU,eAA/C,EAAgE;AAC9D,YAAIC,YAAY,GAAGlC,gBAAgB,CAAC2C,KAAD,EAAQC,IAAR,CAAnC;AACA,YAAIV,YAAY,KAAKZ,KAAK,CAACC,KAAN,CAAYW,YAAjC,EAA+C;;AAE/CZ,QAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbhB,UAAAA,YAAY,EAAEA;AADD,SAAf;AAGD;;AAED,UAAI8B,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAAC;AACTrB,UAAAA,KAAK,EAAEA,KADE;AAETC,UAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN;AAFxB,SAAD,CAAV;AAID;AACF,KAzBD;;AA2BAiE,IAAAA,KAAK,CAAC2C,eAAN,GAAwB,UAAUtB,KAAV,EAAiBC,IAAjB,EAAuB;AAC7C,UAAIsB,WAAW,GAAG5C,KAAK,CAACjE,KAAN,CAAY6G,WAA9B;;AAEA5C,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbjB,QAAAA,eAAe,EAAE;AADJ,OAAf;;AAIA,UAAIiC,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAAC;AACVvB,UAAAA,KAAK,EAAEA,KADG;AAEVC,UAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN;AAFvB,SAAD,CAAX;AAID;AACF,KAbD;;AAeAiE,IAAAA,KAAK,CAAC6C,aAAN,GAAsB,UAAUxB,KAAV,EAAiBC,IAAjB,EAAuB;AAC3C,UAAIwB,SAAS,GAAG9C,KAAK,CAACjE,KAAN,CAAY+G,SAA5B;;AAEA9C,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbjB,QAAAA,eAAe,EAAE;AADJ,OAAf;;AAIAX,MAAAA,KAAK,CAAC+C,cAAN;;AAEA,UAAID,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAAC;AACRzB,UAAAA,KAAK,EAAEA,KADC;AAERC,UAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN;AAFzB,SAAD,CAAT;AAID;;AAEDiE,MAAAA,KAAK,CAAC0B,QAAN,GAAiB,IAAjB;AACD,KAjBD;;AAmBA1B,IAAAA,KAAK,CAACgD,UAAN,GAAmB,UAAU3B,KAAV,EAAiBC,IAAjB,EAAuB;AACxC,UAAI2B,YAAY,GAAGjD,KAAK,CAACC,KAAzB;AAAA,UACIiD,qBAAqB,GAAGD,YAAY,CAACvC,aADzC;AAAA,UAEIA,aAAa,GAAGwC,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAF5D;AAAA,UAGItC,YAAY,GAAGqC,YAAY,CAACrC,YAHhC;AAIA,UAAIuC,MAAM,GAAGnD,KAAK,CAACjE,KAAN,CAAYoH,MAAzB;AACA,UAAIC,YAAY,GAAG9B,IAAI,CAACvF,KAAxB;AAAA,UACI0F,QAAQ,GAAG2B,YAAY,CAAC3B,QAD5B;AAAA,UAEIQ,GAAG,GAAGmB,YAAY,CAACnB,GAFvB;;AAIAjC,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbjB,QAAAA,eAAe,EAAE;AADJ,OAAf;;AAIAX,MAAAA,KAAK,CAAC+C,cAAN;;AAEA,UAAIrC,aAAa,CAACwB,OAAd,CAAsBT,QAAtB,MAAoC,CAAC,CAAzC,EAA4C;AAC1CxD,QAAAA,OAAO,CAAC,KAAD,EAAQ,sDAAR,CAAP;AACA;AACD;;AAED,UAAIoF,MAAM,GAAGxE,QAAQ,CAACoD,GAAD,CAArB;AACA,UAAIqB,UAAU,GAAG;AACfjC,QAAAA,KAAK,EAAEA,KADQ;AAEfC,QAAAA,IAAI,EAAEpC,2BAA2B,CAACoC,IAAI,CAACvF,KAAN,CAFlB;AAGf2F,QAAAA,QAAQ,EAAExC,2BAA2B,CAACc,KAAK,CAAC0B,QAAN,CAAe3F,KAAhB,CAHtB;AAIf2E,QAAAA,aAAa,EAAEA,aAAa,CAACxF,KAAd,EAJA;AAKf0F,QAAAA,YAAY,EAAEA,YAAY,GAAG2C,MAAM,CAACF,MAAM,CAACA,MAAM,CAAC3J,MAAP,GAAgB,CAAjB,CAAP,CALpB;AAMf8J,QAAAA,SAAS,EAAE;AANI,OAAjB;;AASA,UAAI5C,YAAY,KAAK,CAArB,EAAwB;AACtB0C,QAAAA,UAAU,CAACE,SAAX,GAAuB,IAAvB;AACD;;AAED,UAAIL,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACG,UAAD,CAAN;AACD;;AAEDtD,MAAAA,KAAK,CAAC0B,QAAN,GAAiB,IAAjB;AACD,KAxCD;;AA0CA1B,IAAAA,KAAK,CAAC+C,cAAN,GAAuB,YAAY;AACjC,UAAItC,QAAQ,GAAGT,KAAK,CAACC,KAAN,CAAYQ,QAA3B;;AAEA,UAAIA,QAAJ,EAAc;AACZT,QAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbnB,UAAAA,QAAQ,EAAE;AADG,SAAf;AAGD;AACF,KARD;;AAUAT,IAAAA,KAAK,CAACyD,WAAN,GAAoB,UAAU7F,CAAV,EAAa8F,QAAb,EAAuB;AACzC,UAAIC,OAAO,GAAG3D,KAAK,CAACjE,KAAN,CAAY4H,OAA1B;;AAEA,UAAIA,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAAC/F,CAAD,EAAI8F,QAAJ,CAAP;AACD;AACF,KAND;;AAQA1D,IAAAA,KAAK,CAAC4D,iBAAN,GAA0B,UAAUhG,CAAV,EAAa8F,QAAb,EAAuB;AAC/C,UAAIG,aAAa,GAAG7D,KAAK,CAACjE,KAAN,CAAY8H,aAAhC;;AAEA,UAAIA,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACjG,CAAD,EAAI8F,QAAJ,CAAb;AACD;AACF,KAND;;AAQA1D,IAAAA,KAAK,CAAC8D,YAAN,GAAqB,UAAUlG,CAAV,EAAa8F,QAAb,EAAuB;AAC1C,UAAIvD,YAAY,GAAGH,KAAK,CAACC,KAAN,CAAYE,YAA/B;AACA,UAAID,WAAW,GAAGF,KAAK,CAACC,KAAN,CAAYC,WAA9B;AACA,UAAI6D,WAAW,GAAG/D,KAAK,CAACjE,KAAxB;AAAA,UACIiI,QAAQ,GAAGD,WAAW,CAACC,QAD3B;AAAA,UAEIC,QAAQ,GAAGF,WAAW,CAACE,QAF3B;AAGA,UAAIC,QAAQ,GAAGR,QAAQ,CAACQ,QAAxB;AAAA,UACIrK,GAAG,GAAG6J,QAAQ,CAAC7J,GADnB;AAEA,UAAIsK,cAAc,GAAG,CAACD,QAAtB,CAR0C,CAQV;;AAEhC,UAAI,CAACC,cAAL,EAAqB;AACnBhE,QAAAA,YAAY,GAAGvB,MAAM,CAACuB,YAAD,EAAetG,GAAf,CAArB;AACD,OAFD,MAEO,IAAI,CAACoK,QAAL,EAAe;AACpB9D,QAAAA,YAAY,GAAG,CAACtG,GAAD,CAAf;AACD,OAFM,MAEA;AACLsG,QAAAA,YAAY,GAAGxB,MAAM,CAACwB,YAAD,EAAetG,GAAf,CAArB;AACD,OAhByC,CAgBxC;;;AAGF,UAAIuK,aAAa,GAAGjE,YAAY,CAACkE,GAAb,CAAiB,UAAUC,WAAV,EAAuB;AAC1D,YAAI/B,MAAM,GAAGrC,WAAW,CAACoE,WAAD,CAAxB;AACA,YAAI,CAAC/B,MAAL,EAAa,OAAO,IAAP;AACb,eAAOA,MAAM,CAACjB,IAAd;AACD,OAJmB,EAIjBtI,MAJiB,CAIV,UAAUsI,IAAV,EAAgB;AACxB,eAAOA,IAAP;AACD,OANmB,CAApB;;AAQAtB,MAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzBpE,QAAAA,YAAY,EAAEA;AADW,OAA3B;;AAIA,UAAI6D,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAC7D,YAAD,EAAe;AACrBkB,UAAAA,KAAK,EAAE,QADc;AAErB6C,UAAAA,QAAQ,EAAEC,cAFW;AAGrB7C,UAAAA,IAAI,EAAEoC,QAHe;AAIrBU,UAAAA,aAAa,EAAEA,aAJM;AAKrBI,UAAAA,WAAW,EAAE5G,CAAC,CAAC4G;AALM,SAAf,CAAR;AAOD;AACF,KAxCD;;AA0CAxE,IAAAA,KAAK,CAACyE,WAAN,GAAoB,UAAU7G,CAAV,EAAa8F,QAAb,EAAuBgB,OAAvB,EAAgC;AAClD,UAAIC,YAAY,GAAG3E,KAAK,CAACC,KAAzB;AAAA,UACIC,WAAW,GAAGyE,YAAY,CAACzE,WAD/B;AAAA,UAEI0E,cAAc,GAAGD,YAAY,CAACvE,WAFlC;AAAA,UAGIyE,kBAAkB,GAAGF,YAAY,CAACtE,eAHtC;AAIA,UAAIyE,YAAY,GAAG9E,KAAK,CAACjE,KAAzB;AAAA,UACIgJ,aAAa,GAAGD,YAAY,CAACC,aADjC;AAAA,UAEIC,OAAO,GAAGF,YAAY,CAACE,OAF3B;AAGA,UAAInL,GAAG,GAAG6J,QAAQ,CAAC7J,GAAnB,CARkD,CAQ1B;;AAExB,UAAIoL,UAAJ;AACA,UAAIC,QAAQ,GAAG;AACb7D,QAAAA,KAAK,EAAE,OADM;AAEbC,QAAAA,IAAI,EAAEoC,QAFO;AAGbgB,QAAAA,OAAO,EAAEA,OAHI;AAIbF,QAAAA,WAAW,EAAE5G,CAAC,CAAC4G;AAJF,OAAf;;AAOA,UAAIO,aAAJ,EAAmB;AACjB,YAAI3E,WAAW,GAAGsE,OAAO,GAAG/F,MAAM,CAACiG,cAAD,EAAiB/K,GAAjB,CAAT,GAAiC+E,MAAM,CAACgG,cAAD,EAAiB/K,GAAjB,CAAhE;AACA,YAAIwG,eAAe,GAAGzB,MAAM,CAACiG,kBAAD,EAAqBhL,GAArB,CAA5B;AACAoL,QAAAA,UAAU,GAAG;AACXP,UAAAA,OAAO,EAAEtE,WADE;AAEX+E,UAAAA,WAAW,EAAE9E;AAFF,SAAb;AAIA6E,QAAAA,QAAQ,CAACE,YAAT,GAAwBhF,WAAW,CAACiE,GAAZ,CAAgB,UAAUgB,UAAV,EAAsB;AAC5D,iBAAOnF,WAAW,CAACmF,UAAD,CAAlB;AACD,SAFuB,EAErBrM,MAFqB,CAEd,UAAUuJ,MAAV,EAAkB;AAC1B,iBAAOA,MAAP;AACD,SAJuB,EAIrB8B,GAJqB,CAIjB,UAAU9B,MAAV,EAAkB;AACvB,iBAAOA,MAAM,CAACjB,IAAd;AACD,SANuB,CAAxB;;AAQAtB,QAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzBnE,UAAAA,WAAW,EAAEA;AADY,SAA3B;AAGD,OAlBD,MAkBO;AACL;AACA,YAAIkF,aAAa,GAAG9F,YAAY,CAAC,GAAG+F,MAAH,CAAUlL,kBAAkB,CAACuK,cAAD,CAA5B,EAA8C,CAAC/K,GAAD,CAA9C,CAAD,EAAuD,IAAvD,EAA6DqG,WAA7D,CAAhC;AAAA,YACIsF,YAAY,GAAGF,aAAa,CAAClF,WADjC;AAAA,YAEIqF,gBAAgB,GAAGH,aAAa,CAACjF,eAFrC,CAFK,CAIiD;;;AAGtD,YAAI,CAACqE,OAAL,EAAc;AACZ,cAAIgB,MAAM,GAAG,IAAIC,GAAJ,CAAQH,YAAR,CAAb;AACAE,UAAAA,MAAM,CAACE,MAAP,CAAc/L,GAAd;;AAEA,cAAIgM,cAAc,GAAGrG,YAAY,CAACpE,KAAK,CAACC,IAAN,CAAWqK,MAAX,CAAD,EAAqB;AACpDhB,YAAAA,OAAO,EAAE,KAD2C;AAEpDrE,YAAAA,eAAe,EAAEoF;AAFmC,WAArB,EAG9BvF,WAH8B,CAAjC;;AAKAsF,UAAAA,YAAY,GAAGK,cAAc,CAACzF,WAA9B;AACAqF,UAAAA,gBAAgB,GAAGI,cAAc,CAACxF,eAAlC;AACD;;AAED4E,QAAAA,UAAU,GAAGO,YAAb,CApBK,CAoBsB;;AAE3BN,QAAAA,QAAQ,CAACE,YAAT,GAAwB,EAAxB;AACAF,QAAAA,QAAQ,CAACY,qBAAT,GAAiC,EAAjC;AACAZ,QAAAA,QAAQ,CAAC7E,eAAT,GAA2BoF,gBAA3B;;AAEAD,QAAAA,YAAY,CAAC5L,OAAb,CAAqB,UAAUyL,UAAV,EAAsB;AACzC,cAAI9C,MAAM,GAAGrC,WAAW,CAACmF,UAAD,CAAxB;AACA,cAAI,CAAC9C,MAAL,EAAa;AACb,cAAIjB,IAAI,GAAGiB,MAAM,CAACjB,IAAlB;AAAA,cACIW,GAAG,GAAGM,MAAM,CAACN,GADjB;AAEAiD,UAAAA,QAAQ,CAACE,YAAT,CAAsBhM,IAAtB,CAA2BkI,IAA3B;AACA4D,UAAAA,QAAQ,CAACY,qBAAT,CAA+B1M,IAA/B,CAAoC;AAClCkI,YAAAA,IAAI,EAAEA,IAD4B;AAElCW,YAAAA,GAAG,EAAEA;AAF6B,WAApC;AAID,SAVD;;AAYAjC,QAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzBnE,UAAAA,WAAW,EAAEoF;AADY,SAA3B,EAEG,KAFH,EAEU;AACRnF,UAAAA,eAAe,EAAEoF;AADT,SAFV;AAKD;;AAED,UAAIT,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACC,UAAD,EAAaC,QAAb,CAAP;AACD;AACF,KApFD;;AAsFAlF,IAAAA,KAAK,CAAC+F,UAAN,GAAmB,UAAUrC,QAAV,EAAoB;AACrC,aAAO,IAAIsC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC;AACAjG,QAAAA,KAAK,CAAC4B,QAAN,CAAe,UAAUsE,IAAV,EAAgB;AAC7B,cAAIC,eAAe,GAAGD,IAAI,CAAC5F,UAA3B;AAAA,cACIA,UAAU,GAAG6F,eAAe,KAAK,KAAK,CAAzB,GAA6B,EAA7B,GAAkCA,eADnD;AAAA,cAEIC,gBAAgB,GAAGF,IAAI,CAAC3F,WAF5B;AAAA,cAGIA,WAAW,GAAG6F,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,EAA9B,GAAmCA,gBAHrD;AAIA,cAAIC,YAAY,GAAGrG,KAAK,CAACjE,KAAzB;AAAA,cACIuK,QAAQ,GAAGD,YAAY,CAACC,QAD5B;AAAA,cAEIC,MAAM,GAAGF,YAAY,CAACE,MAF1B;AAGA,cAAI1M,GAAG,GAAG6J,QAAQ,CAAC7J,GAAnB;;AAEA,cAAI,CAACyM,QAAD,IAAahG,UAAU,CAAC4B,OAAX,CAAmBrI,GAAnB,MAA4B,CAAC,CAA1C,IAA+C0G,WAAW,CAAC2B,OAAZ,CAAoBrI,GAApB,MAA6B,CAAC,CAAjF,EAAoF;AAClF;AACA,mBAAO,EAAP;AACD,WAb4B,CAa3B;;;AAGF,cAAI2M,OAAO,GAAGF,QAAQ,CAAC5C,QAAD,CAAtB;AACA8C,UAAAA,OAAO,CAACC,IAAR,CAAa,YAAY;AACvB,gBAAIC,YAAY,GAAG1G,KAAK,CAACC,KAAzB;AAAA,gBACI0G,iBAAiB,GAAGD,YAAY,CAACpG,UADrC;AAAA,gBAEIsG,kBAAkB,GAAGF,YAAY,CAACnG,WAFtC;AAGA,gBAAIsG,aAAa,GAAGlI,MAAM,CAACgI,iBAAD,EAAoB9M,GAApB,CAA1B;AACA,gBAAIiN,cAAc,GAAGlI,MAAM,CAACgI,kBAAD,EAAqB/M,GAArB,CAA3B,CALuB,CAK+B;AACtD;;AAEA,gBAAI0M,MAAJ,EAAY;AACVA,cAAAA,MAAM,CAACM,aAAD,EAAgB;AACpBxF,gBAAAA,KAAK,EAAE,MADa;AAEpBC,gBAAAA,IAAI,EAAEoC;AAFc,eAAhB,CAAN;AAID;;AAED1D,YAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzBjE,cAAAA,UAAU,EAAEuG;AADa,aAA3B;;AAIA7G,YAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbrB,cAAAA,WAAW,EAAEuG;AADA,aAAf;;AAIAb,YAAAA,OAAO;AACR,WAxBD;AAyBA,iBAAO;AACL1F,YAAAA,WAAW,EAAE5B,MAAM,CAAC4B,WAAD,EAAc1G,GAAd;AADd,WAAP;AAGD,SA7CD;AA8CD,OAhDM,CAAP;AAiDD,KAlDD;;AAoDAmG,IAAAA,KAAK,CAAC+G,YAAN,GAAqB,UAAUnJ,CAAV,EAAa8F,QAAb,EAAuB;AAC1C,UAAIlD,YAAY,GAAGR,KAAK,CAACC,KAAN,CAAYO,YAA/B;AACA,UAAIK,QAAQ,GAAGb,KAAK,CAACC,KAAN,CAAYY,QAA3B;AACA,UAAImG,YAAY,GAAGhH,KAAK,CAACjE,KAAzB;AAAA,UACIkL,QAAQ,GAAGD,YAAY,CAACC,QAD5B;AAAA,UAEIX,QAAQ,GAAGU,YAAY,CAACV,QAF5B;AAGA,UAAIzM,GAAG,GAAG6J,QAAQ,CAAC7J,GAAnB;AAAA,UACIqN,QAAQ,GAAGxD,QAAQ,CAACwD,QADxB,CAN0C,CAOR;;AAElC,UAAIC,KAAK,GAAG3G,YAAY,CAAC0B,OAAb,CAAqBrI,GAArB,CAAZ;AACA,UAAIuN,cAAc,GAAG,CAACF,QAAtB;AACAjJ,MAAAA,OAAO,CAACiJ,QAAQ,IAAIC,KAAK,KAAK,CAAC,CAAvB,IAA4B,CAACD,QAAD,IAAaC,KAAK,KAAK,CAAC,CAArD,EAAwD,wCAAxD,CAAP;;AAEA,UAAIC,cAAJ,EAAoB;AAClB5G,QAAAA,YAAY,GAAG7B,MAAM,CAAC6B,YAAD,EAAe3G,GAAf,CAArB;AACD,OAFD,MAEO;AACL2G,QAAAA,YAAY,GAAG5B,MAAM,CAAC4B,YAAD,EAAe3G,GAAf,CAArB;AACD;;AAED,UAAIiH,YAAY,GAAGhC,eAAe,CAAC+B,QAAD,EAAWL,YAAX,CAAlC;;AAEAR,MAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzB/D,QAAAA,YAAY,EAAEA,YADW;AAEzBM,QAAAA,YAAY,EAAEA;AAFW,OAA3B,EAGG,IAHH;;AAKA,UAAImG,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACzG,YAAD,EAAe;AACrBc,UAAAA,IAAI,EAAEoC,QADe;AAErBwD,UAAAA,QAAQ,EAAEE,cAFW;AAGrB5C,UAAAA,WAAW,EAAE5G,CAAC,CAAC4G;AAHM,SAAf,CAAR;AAKD,OAhCyC,CAgCxC;;;AAGF,UAAI4C,cAAc,IAAId,QAAtB,EAAgC;AAC9B,YAAIe,WAAW,GAAGrH,KAAK,CAAC+F,UAAN,CAAiBrC,QAAjB,CAAlB;;AAEA,eAAO2D,WAAW,GAAGA,WAAW,CAACZ,IAAZ,CAAiB,YAAY;AAChD;AACA,cAAIa,kBAAkB,GAAGxI,eAAe,CAACkB,KAAK,CAACC,KAAN,CAAYY,QAAb,EAAuBL,YAAvB,CAAxC;;AAEAR,UAAAA,KAAK,CAACuE,oBAAN,CAA2B;AACzBzD,YAAAA,YAAY,EAAEwG;AADW,WAA3B;AAGD,SAPoB,CAAH,GAOb,IAPL;AAQD;;AAED,aAAO,IAAP;AACD,KAjDD;;AAmDAtH,IAAAA,KAAK,CAACuH,gBAAN,GAAyB,UAAUlG,KAAV,EAAiBC,IAAjB,EAAuB;AAC9C,UAAIkG,YAAY,GAAGxH,KAAK,CAACjE,KAAN,CAAYyL,YAA/B;;AAEA,UAAIA,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAAC;AACXnG,UAAAA,KAAK,EAAEA,KADI;AAEXC,UAAAA,IAAI,EAAEA;AAFK,SAAD,CAAZ;AAID;AACF,KATD;;AAWAtB,IAAAA,KAAK,CAACyH,gBAAN,GAAyB,UAAUpG,KAAV,EAAiBC,IAAjB,EAAuB;AAC9C,UAAIoG,YAAY,GAAG1H,KAAK,CAACjE,KAAN,CAAY2L,YAA/B;;AAEA,UAAIA,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAAC;AACXrG,UAAAA,KAAK,EAAEA,KADI;AAEXC,UAAAA,IAAI,EAAEA;AAFK,SAAD,CAAZ;AAID;AACF,KATD;;AAWAtB,IAAAA,KAAK,CAAC2H,iBAAN,GAA0B,UAAUtG,KAAV,EAAiBC,IAAjB,EAAuB;AAC/C,UAAIsG,YAAY,GAAG5H,KAAK,CAACjE,KAAN,CAAY6L,YAA/B;;AAEA,UAAIA,YAAJ,EAAkB;AAChBvG,QAAAA,KAAK,CAACwG,cAAN;AACAD,QAAAA,YAAY,CAAC;AACXvG,UAAAA,KAAK,EAAEA,KADI;AAEXC,UAAAA,IAAI,EAAEA;AAFK,SAAD,CAAZ;AAID;AACF,KAVD;;AAYAtB,IAAAA,KAAK,CAAC8H,OAAN,GAAgB,YAAY;AAC1B,UAAIA,OAAO,GAAG9H,KAAK,CAACjE,KAAN,CAAY+L,OAA1B;;AAEA9H,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbb,QAAAA,OAAO,EAAE;AADI,OAAf;;AAIA,UAAI+G,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACzO,KAAR,CAAc,KAAK,CAAnB,EAAsBI,SAAtB;AACD;AACF,KAVD;;AAYAuG,IAAAA,KAAK,CAAC+H,MAAN,GAAe,YAAY;AACzB,UAAIA,MAAM,GAAG/H,KAAK,CAACjE,KAAN,CAAYgM,MAAzB;;AAEA/H,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbb,QAAAA,OAAO,EAAE;AADI,OAAf;;AAIAf,MAAAA,KAAK,CAACgI,cAAN,CAAqB,IAArB;;AAEA,UAAID,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAAC1O,KAAP,CAAa,KAAK,CAAlB,EAAqBI,SAArB;AACD;AACF,KAZD;;AAcAuG,IAAAA,KAAK,CAACiI,wBAAN,GAAiC,YAAY;AAC3C,UAAIC,YAAY,GAAGlI,KAAK,CAACC,KAAzB;AAAA,UACIO,YAAY,GAAG0H,YAAY,CAAC1H,YADhC;AAAA,UAEIL,YAAY,GAAG+H,YAAY,CAAC/H,YAFhC;AAAA,UAGIG,UAAU,GAAG4H,YAAY,CAAC5H,UAH9B;AAAA,UAIIC,WAAW,GAAG2H,YAAY,CAAC3H,WAJ/B;AAAA,UAKIH,WAAW,GAAG8H,YAAY,CAAC9H,WAL/B;AAAA,UAMIC,eAAe,GAAG6H,YAAY,CAAC7H,eANnC;AAAA,UAOIM,eAAe,GAAGuH,YAAY,CAACvH,eAPnC;AAAA,UAQIC,YAAY,GAAGsH,YAAY,CAACtH,YARhC;AAAA,UASIV,WAAW,GAAGgI,YAAY,CAAChI,WAT/B;AAUA,aAAO;AACLM,QAAAA,YAAY,EAAEA,YAAY,IAAI,EADzB;AAELL,QAAAA,YAAY,EAAEA,YAAY,IAAI,EAFzB;AAGLG,QAAAA,UAAU,EAAEA,UAAU,IAAI,EAHrB;AAILC,QAAAA,WAAW,EAAEA,WAAW,IAAI,EAJvB;AAKLH,QAAAA,WAAW,EAAEA,WAAW,IAAI,EALvB;AAMLC,QAAAA,eAAe,EAAEA,eAAe,IAAI,EAN/B;AAOLM,QAAAA,eAAe,EAAEA,eAPZ;AAQLC,QAAAA,YAAY,EAAEA,YART;AASLV,QAAAA,WAAW,EAAEA;AATR,OAAP;AAWD,KAtBD,CAriBc,CA2jBX;;;AAGHF,IAAAA,KAAK,CAACgI,cAAN,GAAuB,UAAUG,YAAV,EAAwB;AAC7C,UAAInH,SAAS,GAAGhB,KAAK,CAACC,KAAN,CAAYe,SAA5B;AACA,UAAIgH,cAAc,GAAGhI,KAAK,CAACjE,KAAN,CAAYiM,cAAjC;;AAEA,UAAIhH,SAAS,KAAKmH,YAAlB,EAAgC;AAC9B;AACD;;AAEDnI,MAAAA,KAAK,CAAC4B,QAAN,CAAe;AACbZ,QAAAA,SAAS,EAAEmH;AADE,OAAf;;AAIA,UAAIA,YAAY,KAAK,IAArB,EAA2B;AACzBnI,QAAAA,KAAK,CAACoI,QAAN,CAAe;AACbvO,UAAAA,GAAG,EAAEsO;AADQ,SAAf;AAGD;;AAED,UAAIH,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACG,YAAD,CAAd;AACD;AACF,KArBD;;AAuBAnI,IAAAA,KAAK,CAACqI,aAAN,GAAsB,YAAY;AAChC,UAAIC,YAAY,GAAGtI,KAAK,CAACC,KAAzB;AAAA,UACIe,SAAS,GAAGsH,YAAY,CAACtH,SAD7B;AAAA,UAEIF,YAAY,GAAGwH,YAAY,CAACxH,YAFhC;;AAIA,UAAIE,SAAS,KAAK,IAAlB,EAAwB;AACtB,eAAO,IAAP;AACD;;AAED,aAAOF,YAAY,CAACyH,IAAb,CAAkB,UAAUC,KAAV,EAAiB;AACxC,YAAI3O,GAAG,GAAG2O,KAAK,CAACC,IAAN,CAAW5O,GAArB;AACA,eAAOA,GAAG,KAAKmH,SAAf;AACD,OAHM,KAGD,IAHN;AAID,KAbD;;AAeAhB,IAAAA,KAAK,CAAC0I,eAAN,GAAwB,UAAUC,MAAV,EAAkB;AACxC,UAAIC,YAAY,GAAG5I,KAAK,CAACC,KAAzB;AAAA,UACIa,YAAY,GAAG8H,YAAY,CAAC9H,YADhC;AAAA,UAEIE,SAAS,GAAG4H,YAAY,CAAC5H,SAF7B;AAGA,UAAImG,KAAK,GAAGrG,YAAY,CAAC+H,SAAb,CAAuB,UAAUC,KAAV,EAAiB;AAClD,YAAIjP,GAAG,GAAGiP,KAAK,CAACL,IAAN,CAAW5O,GAArB;AACA,eAAOA,GAAG,KAAKmH,SAAf;AACD,OAHW,CAAZ,CAJwC,CAOpC;;AAEJ,UAAImG,KAAK,KAAK,CAAC,CAAX,IAAgBwB,MAAM,GAAG,CAA7B,EAAgC;AAC9BxB,QAAAA,KAAK,GAAGrG,YAAY,CAACpH,MAArB;AACD;;AAEDyN,MAAAA,KAAK,GAAG,CAACA,KAAK,GAAGwB,MAAR,GAAiB7H,YAAY,CAACpH,MAA/B,IAAyCoH,YAAY,CAACpH,MAA9D;AACA,UAAIqP,IAAI,GAAGjI,YAAY,CAACqG,KAAD,CAAvB;;AAEA,UAAI4B,IAAJ,EAAU;AACR,YAAIlP,GAAG,GAAGkP,IAAI,CAACN,IAAL,CAAU5O,GAApB;;AAEAmG,QAAAA,KAAK,CAACgI,cAAN,CAAqBnO,GAArB;AACD,OAJD,MAIO;AACLmG,QAAAA,KAAK,CAACgI,cAAN,CAAqB,IAArB;AACD;AACF,KAvBD;;AAyBAhI,IAAAA,KAAK,CAACgJ,SAAN,GAAkB,UAAU3H,KAAV,EAAiB;AACjC,UAAI4H,YAAY,GAAGjJ,KAAK,CAACC,KAAzB;AAAA,UACIe,SAAS,GAAGiI,YAAY,CAACjI,SAD7B;AAAA,UAEIR,YAAY,GAAGyI,YAAY,CAACzI,YAFhC;AAAA,UAGIJ,WAAW,GAAG6I,YAAY,CAAC7I,WAH/B;AAIA,UAAI8I,YAAY,GAAGlJ,KAAK,CAACjE,KAAzB;AAAA,UACIiN,SAAS,GAAGE,YAAY,CAACF,SAD7B;AAAA,UAEIG,SAAS,GAAGD,YAAY,CAACC,SAF7B;AAAA,UAGIC,UAAU,GAAGF,YAAY,CAACE,UAH9B,CALiC,CAQS;;AAE1C,cAAQ/H,KAAK,CAACgI,KAAd;AACE,aAAKrL,OAAO,CAACsL,EAAb;AACE;AACEtJ,YAAAA,KAAK,CAAC0I,eAAN,CAAsB,CAAC,CAAvB;;AAEArH,YAAAA,KAAK,CAACwG,cAAN;AACA;AACD;;AAEH,aAAK7J,OAAO,CAACuL,IAAb;AACE;AACEvJ,YAAAA,KAAK,CAAC0I,eAAN,CAAsB,CAAtB;;AAEArH,YAAAA,KAAK,CAACwG,cAAN;AACA;AACD;AAfL,OAViC,CA0B/B;;;AAGF,UAAI2B,UAAU,GAAGxJ,KAAK,CAACqI,aAAN,EAAjB;;AAEA,UAAImB,UAAU,IAAIA,UAAU,CAACf,IAA7B,EAAmC;AACjC,YAAIgB,qBAAqB,GAAGzJ,KAAK,CAACiI,wBAAN,EAA5B;;AAEA,YAAIyB,UAAU,GAAGF,UAAU,CAACf,IAAX,CAAgBkB,MAAhB,KAA2B,KAA3B,IAAoC,CAAC,CAAC,CAACH,UAAU,CAACf,IAAX,CAAgBjG,QAAhB,IAA4B,EAA7B,EAAiC9I,MAAxF;AACA,YAAIkQ,SAAS,GAAG1K,2BAA2B,CAAC5F,aAAa,CAAC,EAAD,EAAK6F,gBAAgB,CAAC6B,SAAD,EAAYyI,qBAAZ,CAArB,EAAyD;AAChHhB,UAAAA,IAAI,EAAEe,UAAU,CAACf,IAD+F;AAEhHoB,UAAAA,MAAM,EAAE;AAFwG,SAAzD,CAAd,CAA3C;;AAKA,gBAAQxI,KAAK,CAACgI,KAAd;AACE;AACA,eAAKrL,OAAO,CAAC8L,IAAb;AACE;AACE;AACA,kBAAIJ,UAAU,IAAIlJ,YAAY,CAACuJ,QAAb,CAAsB/I,SAAtB,CAAlB,EAAoD;AAClDhB,gBAAAA,KAAK,CAAC+G,YAAN,CAAmB,EAAnB,EAAuB6C,SAAvB;AACD,eAFD,MAEO,IAAIJ,UAAU,CAACQ,MAAf,EAAuB;AAC5BhK,gBAAAA,KAAK,CAACgI,cAAN,CAAqBwB,UAAU,CAACQ,MAAX,CAAkBvB,IAAlB,CAAuB5O,GAA5C;AACD;;AAEDwH,cAAAA,KAAK,CAACwG,cAAN;AACA;AACD;;AAEH,eAAK7J,OAAO,CAACiM,KAAb;AACE;AACE;AACA,kBAAIP,UAAU,IAAI,CAAClJ,YAAY,CAACuJ,QAAb,CAAsB/I,SAAtB,CAAnB,EAAqD;AACnDhB,gBAAAA,KAAK,CAAC+G,YAAN,CAAmB,EAAnB,EAAuB6C,SAAvB;AACD,eAFD,MAEO,IAAIJ,UAAU,CAAChH,QAAX,IAAuBgH,UAAU,CAAChH,QAAX,CAAoB9I,MAA/C,EAAuD;AAC5DsG,gBAAAA,KAAK,CAACgI,cAAN,CAAqBwB,UAAU,CAAChH,QAAX,CAAoB,CAApB,EAAuBiG,IAAvB,CAA4B5O,GAAjD;AACD;;AAEDwH,cAAAA,KAAK,CAACwG,cAAN;AACA;AACD;AACH;;AAEA,eAAK7J,OAAO,CAACkM,KAAb;AACA,eAAKlM,OAAO,CAACmM,KAAb;AACE;AACE,kBAAIhB,SAAS,IAAI,CAACS,SAAS,CAACQ,QAAxB,IAAoCR,SAAS,CAACT,SAAV,KAAwB,KAA5D,IAAqE,CAACS,SAAS,CAACS,eAApF,EAAqG;AACnGrK,gBAAAA,KAAK,CAACyE,WAAN,CAAkB,EAAlB,EAAsBmF,SAAtB,EAAiC,CAACxJ,WAAW,CAAC2J,QAAZ,CAAqB/I,SAArB,CAAlC;AACD,eAFD,MAEO,IAAI,CAACmI,SAAD,IAAcC,UAAd,IAA4B,CAACQ,SAAS,CAACQ,QAAvC,IAAmDR,SAAS,CAACR,UAAV,KAAyB,KAAhF,EAAuF;AAC5FpJ,gBAAAA,KAAK,CAAC8D,YAAN,CAAmB,EAAnB,EAAuB8F,SAAvB;AACD;;AAED;AACD;AAvCL;AAyCD;;AAED,UAAIZ,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAAC3H,KAAD,CAAT;AACD;AACF,KAtFD;AAuFA;;;;;AAKArB,IAAAA,KAAK,CAACuE,oBAAN,GAA6B,UAAUtE,KAAV,EAAiB;AAC5C,UAAIqK,MAAM,GAAG7Q,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB8Q,SAAzC,GAAqD9Q,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAjF;AACA,UAAI+Q,UAAU,GAAG/Q,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB8Q,SAAzC,GAAqD9Q,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAArF;AACA,UAAIgR,QAAQ,GAAG,KAAf;AACA,UAAIC,SAAS,GAAG,IAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA9R,MAAAA,MAAM,CAACD,IAAP,CAAYqH,KAAZ,EAAmBrG,OAAnB,CAA2B,UAAUuB,IAAV,EAAgB;AACzC,YAAIA,IAAI,IAAI6E,KAAK,CAACjE,KAAlB,EAAyB;AACvB2O,UAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDD,QAAAA,QAAQ,GAAG,IAAX;AACAE,QAAAA,QAAQ,CAACxP,IAAD,CAAR,GAAiB8E,KAAK,CAAC9E,IAAD,CAAtB;AACD,OARD;;AAUA,UAAIsP,QAAQ,KAAK,CAACH,MAAD,IAAWI,SAAhB,CAAZ,EAAwC;AACtC1K,QAAAA,KAAK,CAAC4B,QAAN,CAAetI,aAAa,CAAC,EAAD,EAAKqR,QAAL,EAAe,EAAf,EAAmBH,UAAnB,CAA5B;AACD;AACF,KAnBD;;AAqBAxK,IAAAA,KAAK,CAACoI,QAAN,GAAiB,UAAUwC,MAAV,EAAkB;AACjC5K,MAAAA,KAAK,CAACkB,OAAN,CAAc2J,OAAd,CAAsBzC,QAAtB,CAA+BwC,MAA/B;AACD,KAFD;;AAIA,WAAO5K,KAAP;AACD;;AAED/D,EAAAA,YAAY,CAAC4D,IAAD,EAAO,CAAC;AAClBhG,IAAAA,GAAG,EAAE,QADa;AAElBK,IAAAA,KAAK,EAAE,SAAS4Q,MAAT,GAAkB;AACvB,UAAIC,WAAJ;;AAEA,UAAIC,aAAa,GAAG,KAAK/K,KAAzB;AAAA,UACIc,OAAO,GAAGiK,aAAa,CAACjK,OAD5B;AAAA,UAEID,YAAY,GAAGkK,aAAa,CAAClK,YAFjC;AAAA,UAGIZ,WAAW,GAAG8K,aAAa,CAAC9K,WAHhC;AAAA,UAIIO,QAAQ,GAAGuK,aAAa,CAACvK,QAJ7B;AAAA,UAKIO,SAAS,GAAGgK,aAAa,CAAChK,SAL9B;AAMA,UAAIiK,YAAY,GAAG,KAAKlP,KAAxB;AAAA,UACImP,SAAS,GAAGD,YAAY,CAACC,SAD7B;AAAA,UAEIC,SAAS,GAAGF,YAAY,CAACE,SAF7B;AAAA,UAGIC,KAAK,GAAGH,YAAY,CAACG,KAHzB;AAAA,UAIIC,QAAQ,GAAGJ,YAAY,CAACI,QAJ5B;AAAA,UAKIC,SAAS,GAAGL,YAAY,CAACK,SAL7B;AAAA,UAMIC,qBAAqB,GAAGN,YAAY,CAACO,QANzC;AAAA,UAOIA,QAAQ,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,CAAnC,GAAuCA,qBAPtD;AAAA,UAQInC,UAAU,GAAG6B,YAAY,CAAC7B,UAR9B;AAAA,UASIqC,QAAQ,GAAGR,YAAY,CAACQ,QAT5B;AAAA,UAUIC,IAAI,GAAGT,YAAY,CAACS,IAVxB;AAAA,UAWIC,YAAY,GAAGV,YAAY,CAACU,YAXhC;AAAA,UAYIC,SAAS,GAAGX,YAAY,CAACW,SAZ7B;AAAA,UAaIzC,SAAS,GAAG8B,YAAY,CAAC9B,SAb7B;AAAA,UAcIpE,aAAa,GAAGkG,YAAY,CAAClG,aAdjC;AAAA,UAeIqF,QAAQ,GAAGa,YAAY,CAACb,QAf5B;AAAA,UAgBIyB,MAAM,GAAGZ,YAAY,CAACY,MAhB1B;AAAA,UAiBIvF,QAAQ,GAAG2E,YAAY,CAAC3E,QAjB5B;AAAA,UAkBIwF,cAAc,GAAGb,YAAY,CAACa,cAlBlC;AAAA,UAmBIC,MAAM,GAAGd,YAAY,CAACc,MAnB1B;AAAA,UAoBIC,UAAU,GAAGf,YAAY,CAACe,UApB9B;AAAA,UAqBIC,OAAO,GAAGhB,YAAY,CAACgB,OArB3B;AAsBA,UAAIC,QAAQ,GAAG7N,cAAc,CAAC,KAAKtC,KAAN,CAA7B;AACA,aAAO+B,KAAK,CAACqO,aAAN,CAAoB/N,WAAW,CAACgO,QAAhC,EAA0C;AAC/ClS,QAAAA,KAAK,EAAE;AACLgR,UAAAA,SAAS,EAAEA,SADN;AAEL9B,UAAAA,UAAU,EAAEA,UAFP;AAGLqC,UAAAA,QAAQ,EAAEA,QAHL;AAILC,UAAAA,IAAI,EAAEA,IAJD;AAKLC,UAAAA,YAAY,EAAEA,YALT;AAMLC,UAAAA,SAAS,EAAEA,SANN;AAOLzC,UAAAA,SAAS,EAAEA,SAPN;AAQLpE,UAAAA,aAAa,EAAEA,aARV;AASLqF,UAAAA,QAAQ,EAAEA,QATL;AAULlK,UAAAA,WAAW,EAAEA,WAVR;AAWLoG,UAAAA,QAAQ,EAAEA,QAXL;AAYLwF,UAAAA,cAAc,EAAEA,cAZX;AAaLrI,UAAAA,WAAW,EAAE,KAAKA,WAbb;AAcLG,UAAAA,iBAAiB,EAAE,KAAKA,iBAdnB;AAeLmD,UAAAA,YAAY,EAAE,KAAKA,YAfd;AAgBLjD,UAAAA,YAAY,EAAE,KAAKA,YAhBd;AAiBLW,UAAAA,WAAW,EAAE,KAAKA,WAjBb;AAkBLsB,UAAAA,UAAU,EAAE,KAAKA,UAlBZ;AAmBLwB,UAAAA,gBAAgB,EAAE,KAAKA,gBAnBlB;AAoBLE,UAAAA,gBAAgB,EAAE,KAAKA,gBApBlB;AAqBLE,UAAAA,iBAAiB,EAAE,KAAKA,iBArBnB;AAsBLvG,UAAAA,eAAe,EAAE,KAAKA,eAtBjB;AAuBLS,UAAAA,eAAe,EAAE,KAAKA,eAvBjB;AAwBLY,UAAAA,cAAc,EAAE,KAAKA,cAxBhB;AAyBLE,UAAAA,eAAe,EAAE,KAAKA,eAzBjB;AA0BLE,UAAAA,aAAa,EAAE,KAAKA,aA1Bf;AA2BLG,UAAAA,UAAU,EAAE,KAAKA;AA3BZ;AADwC,OAA1C,EA8BJlF,KAAK,CAACqO,aAAN,CAAoB,KAApB,EAA2B;AAC5BhB,QAAAA,SAAS,EAAEjN,UAAU,CAACgN,SAAD,EAAYC,SAAZ,GAAwBJ,WAAW,GAAG,EAAd,EAAkBjR,eAAe,CAACiR,WAAD,EAAc,GAAGxF,MAAH,CAAU2F,SAAV,EAAqB,YAArB,CAAd,EAAkDG,QAAlD,CAAjC,EAA8FvR,eAAe,CAACiR,WAAD,EAAc,GAAGxF,MAAH,CAAU2F,SAAV,EAAqB,UAArB,CAAd,EAAgDnK,OAAhD,CAA7G,EAAuKjH,eAAe,CAACiR,WAAD,EAAc,GAAGxF,MAAH,CAAU2F,SAAV,EAAqB,iBAArB,CAAd,EAAuDlK,SAAS,KAAK,IAArE,CAAtL,EAAkQ+J,WAA1R;AADO,OAA3B,EAEAjN,KAAK,CAACqO,aAAN,CAAoB/M,QAApB,EAA8BvG,MAAM,CAACwT,MAAP,CAAc;AAC7CC,QAAAA,GAAG,EAAE,KAAKpL,OADmC;AAE7CgK,QAAAA,SAAS,EAAEA,SAFkC;AAG7CE,QAAAA,KAAK,EAAEA,KAHsC;AAI7C3C,QAAAA,IAAI,EAAE3H,YAJuC;AAK7CsJ,QAAAA,QAAQ,EAAEA,QALmC;AAM7ChB,QAAAA,UAAU,EAAEA,UANiC;AAO7CD,QAAAA,SAAS,EAAE,CAAC,CAACA,SAPgC;AAQ7C0C,QAAAA,MAAM,EAAEA,MARqC;AAS7CpL,QAAAA,QAAQ,EAAEA,QATmC;AAU7CsL,QAAAA,MAAM,EAAEA,MAVqC;AAW7CC,QAAAA,UAAU,EAAEA,UAXiC;AAY7CC,QAAAA,OAAO,EAAEA,OAZoC;AAa7CX,QAAAA,SAAS,EAAEA,SAbkC;AAc7CvK,QAAAA,OAAO,EAAEA,OAdoC;AAe7CyK,QAAAA,QAAQ,EAAEA,QAfmC;AAgB7ChC,QAAAA,UAAU,EAAE,KAAKnB,aAAL,EAhBiC;AAiB7CP,QAAAA,OAAO,EAAE,KAAKA,OAjB+B;AAkB7CC,QAAAA,MAAM,EAAE,KAAKA,MAlBgC;AAmB7CiB,QAAAA,SAAS,EAAE,KAAKA,SAnB6B;AAoB7ChB,QAAAA,cAAc,EAAE,KAAKA;AApBwB,OAAd,EAqB9B,KAAKC,wBAAL,EArB8B,EAqBGiE,QArBH,CAA9B,CAFA,CA9BI,CAAP;AAsDD;AAxFiB,GAAD,CAAP,EAyFR,CAAC;AACHrS,IAAAA,GAAG,EAAE,0BADF;AAEHK,IAAAA,KAAK,EAAE,SAASqS,wBAAT,CAAkCxQ,KAAlC,EAAyCyQ,SAAzC,EAAoD;AACzD,UAAIvL,SAAS,GAAGuL,SAAS,CAACvL,SAA1B;AACA,UAAI0J,QAAQ,GAAG;AACb1J,QAAAA,SAAS,EAAElF;AADE,OAAf;;AAIA,eAAS0O,QAAT,CAAkBtP,IAAlB,EAAwB;AACtB,eAAO,CAAC8F,SAAD,IAAc9F,IAAI,IAAIY,KAAtB,IAA+BkF,SAAS,IAAIA,SAAS,CAAC9F,IAAD,CAAT,KAAoBY,KAAK,CAACZ,IAAD,CAA5E;AACD,OARwD,CAQvD;;;AAGF,UAAI0F,QAAJ,CAXyD,CAW3C;;AAEd,UAAI4J,QAAQ,CAAC,UAAD,CAAZ,EAA0B;AACxB5J,QAAAA,QAAQ,GAAG9E,KAAK,CAAC8E,QAAjB;AACD,OAFD,MAEO,IAAI4J,QAAQ,CAAC,UAAD,CAAZ,EAA0B;AAC/BxM,QAAAA,OAAO,CAAC,KAAD,EAAQ,kEAAR,CAAP;AACA4C,QAAAA,QAAQ,GAAG9B,iBAAiB,CAAChD,KAAK,CAACyG,QAAP,CAA5B;AACD,OAlBwD,CAkBvD;;;AAGF,UAAI3B,QAAJ,EAAc;AACZ8J,QAAAA,QAAQ,CAAC9J,QAAT,GAAoBA,QAApB;AACA,YAAI4L,WAAW,GAAGzN,qBAAqB,CAAC6B,QAAD,CAAvC;AACA8J,QAAAA,QAAQ,CAACzK,WAAT,GAAuB5G,aAAa,CAACQ,eAAe,CAAC,EAAD,EAAKuF,UAAL,EAAiBC,YAAjB,CAAhB,EAAgDmN,WAAW,CAACvM,WAA5D,CAApC,CAHY,CAGkG;;AAE9G,YAAIwM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC3N,UAAAA,iBAAiB,CAAC4B,QAAD,CAAjB;AACD;AACF;;AAED,UAAIX,WAAW,GAAGyK,QAAQ,CAACzK,WAAT,IAAwBsM,SAAS,CAACtM,WAApD,CA/ByD,CA+BQ;;AAEjE,UAAIuK,QAAQ,CAAC,cAAD,CAAR,IAA4BxJ,SAAS,IAAIwJ,QAAQ,CAAC,kBAAD,CAArD,EAA2E;AACzEE,QAAAA,QAAQ,CAACnK,YAAT,GAAwBzE,KAAK,CAAC8Q,gBAAN,IAA0B,CAAC5L,SAAD,IAAclF,KAAK,CAAC+Q,mBAA9C,GAAoEtO,mBAAmB,CAACzC,KAAK,CAACyE,YAAP,EAAqBN,WAArB,CAAvF,GAA2HnE,KAAK,CAACyE,YAAzJ;AACD,OAFD,MAEO,IAAI,CAACS,SAAD,IAAclF,KAAK,CAACgR,gBAAxB,EAA0C;AAC/C,YAAIC,gBAAgB,GAAG1T,aAAa,CAAC,EAAD,EAAK4G,WAAL,CAApC;;AAEA,eAAO8M,gBAAgB,CAAC3N,UAAD,CAAvB;AACAsL,QAAAA,QAAQ,CAACnK,YAAT,GAAwB3H,MAAM,CAACD,IAAP,CAAYoU,gBAAZ,EAA8B3I,GAA9B,CAAkC,UAAUxK,GAAV,EAAe;AACvE,iBAAOmT,gBAAgB,CAACnT,GAAD,CAAhB,CAAsBA,GAA7B;AACD,SAFuB,CAAxB;AAGD,OAPM,MAOA,IAAI,CAACoH,SAAD,IAAclF,KAAK,CAACkR,mBAAxB,EAA6C;AAClDtC,QAAAA,QAAQ,CAACnK,YAAT,GAAwBzE,KAAK,CAAC8Q,gBAAN,IAA0B9Q,KAAK,CAAC+Q,mBAAhC,GAAsDtO,mBAAmB,CAACzC,KAAK,CAACkR,mBAAP,EAA4B/M,WAA5B,CAAzE,GAAoHnE,KAAK,CAACkR,mBAAlJ;AACD;;AAED,UAAI,CAACtC,QAAQ,CAACnK,YAAd,EAA4B;AAC1B,eAAOmK,QAAQ,CAACnK,YAAhB;AACD,OAhDwD,CAgDvD;;;AAGF,UAAIK,QAAQ,IAAI8J,QAAQ,CAACnK,YAAzB,EAAuC;AACrC,YAAIM,YAAY,GAAGhC,eAAe,CAAC+B,QAAQ,IAAI2L,SAAS,CAAC3L,QAAvB,EAAiC8J,QAAQ,CAACnK,YAAT,IAAyBgM,SAAS,CAAChM,YAApE,CAAlC;AACAmK,QAAAA,QAAQ,CAAC7J,YAAT,GAAwBA,YAAxB;AACD,OAtDwD,CAsDvD;;;AAGF,UAAI/E,KAAK,CAACqN,UAAV,EAAsB;AACpB,YAAIqB,QAAQ,CAAC,cAAD,CAAZ,EAA8B;AAC5BE,UAAAA,QAAQ,CAACxK,YAAT,GAAwB1B,gBAAgB,CAAC1C,KAAK,CAACoE,YAAP,EAAqBpE,KAArB,CAAxC;AACD,SAFD,MAEO,IAAI,CAACkF,SAAD,IAAclF,KAAK,CAACmR,mBAAxB,EAA6C;AAClDvC,UAAAA,QAAQ,CAACxK,YAAT,GAAwB1B,gBAAgB,CAAC1C,KAAK,CAACmR,mBAAP,EAA4BnR,KAA5B,CAAxC;AACD;AACF,OA/DwD,CA+DvD;;;AAGF,UAAIA,KAAK,CAACoN,SAAV,EAAqB;AACnB,YAAIgE,gBAAJ;;AAEA,YAAI1C,QAAQ,CAAC,aAAD,CAAZ,EAA6B;AAC3B0C,UAAAA,gBAAgB,GAAG5O,gBAAgB,CAACxC,KAAK,CAACqE,WAAP,CAAhB,IAAuC,EAA1D;AACD,SAFD,MAEO,IAAI,CAACa,SAAD,IAAclF,KAAK,CAACqR,kBAAxB,EAA4C;AACjDD,UAAAA,gBAAgB,GAAG5O,gBAAgB,CAACxC,KAAK,CAACqR,kBAAP,CAAhB,IAA8C,EAAjE;AACD,SAFM,MAEA,IAAIvM,QAAJ,EAAc;AACnB;AACAsM,UAAAA,gBAAgB,GAAG5O,gBAAgB,CAACxC,KAAK,CAACqE,WAAP,CAAhB,IAAuC;AACxDA,YAAAA,WAAW,EAAEoM,SAAS,CAACpM,WADiC;AAExDC,YAAAA,eAAe,EAAEmM,SAAS,CAACnM;AAF6B,WAA1D;AAID;;AAED,YAAI8M,gBAAJ,EAAsB;AACpB,cAAIE,iBAAiB,GAAGF,gBAAxB;AAAA,cACIG,qBAAqB,GAAGD,iBAAiB,CAACjN,WAD9C;AAAA,cAEIA,WAAW,GAAGkN,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAF1D;AAAA,cAGIC,qBAAqB,GAAGF,iBAAiB,CAAChN,eAH9C;AAAA,cAIIA,eAAe,GAAGkN,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAJ9D;;AAMA,cAAI,CAACxR,KAAK,CAACgJ,aAAX,EAA0B;AACxB,gBAAIyI,WAAW,GAAGhO,YAAY,CAACY,WAAD,EAAc,IAAd,EAAoBF,WAApB,CAA9B;AACAE,YAAAA,WAAW,GAAGoN,WAAW,CAACpN,WAA1B;AACAC,YAAAA,eAAe,GAAGmN,WAAW,CAACnN,eAA9B;AACD;;AAEDsK,UAAAA,QAAQ,CAACvK,WAAT,GAAuBA,WAAvB;AACAuK,UAAAA,QAAQ,CAACtK,eAAT,GAA2BA,eAA3B;AACD;AACF,OAjGwD,CAiGvD;;;AAGF,UAAIoK,QAAQ,CAAC,YAAD,CAAZ,EAA4B;AAC1BE,QAAAA,QAAQ,CAACrK,UAAT,GAAsBvE,KAAK,CAACuE,UAA5B;AACD;;AAED,aAAOqK,QAAP;AACD;AA3GE,GAAD,CAzFQ,CAAZ;;AAuMA,SAAO9K,IAAP;AACD,CAl8BuB,CAk8BtB/B,KAAK,CAAC2P,SAl8BgB,CAAxB;;AAo8BA5N,IAAI,CAAC6N,SAAL,GAAiB;AACfxC,EAAAA,SAAS,EAAEnN,SAAS,CAAC4B,MADN;AAEfwL,EAAAA,SAAS,EAAEpN,SAAS,CAAC4B,MAFN;AAGfyL,EAAAA,KAAK,EAAErN,SAAS,CAACrF,MAHF;AAIf8S,EAAAA,QAAQ,EAAEzN,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAAC4B,MAAX,EAAmB5B,SAAS,CAAC6B,MAA7B,CAApB,CAJK;AAKf4C,EAAAA,QAAQ,EAAEzE,SAAS,CAAC4P,GALL;AAMf9M,EAAAA,QAAQ,EAAE9C,SAAS,CAAC6P,KANL;AAOfvC,EAAAA,QAAQ,EAAEtN,SAAS,CAAC8P,IAPL;AAQfpC,EAAAA,QAAQ,EAAE1N,SAAS,CAAC8P,IARL;AASfnC,EAAAA,IAAI,EAAE3N,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAACuD,IAAX,EAAiBvD,SAAS,CAAC+P,IAA3B,CAApB,CATS;AAUf1E,EAAAA,UAAU,EAAErL,SAAS,CAAC8P,IAVP;AAWfzD,EAAAA,QAAQ,EAAErM,SAAS,CAAC8P,IAXL;AAYf5J,EAAAA,QAAQ,EAAElG,SAAS,CAAC8P,IAZL;AAaf1E,EAAAA,SAAS,EAAEpL,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAAC8P,IAAX,EAAiB9P,SAAS,CAACuD,IAA3B,CAApB,CAbI;AAcfyD,EAAAA,aAAa,EAAEhH,SAAS,CAAC8P,IAdV;AAefjC,EAAAA,SAAS,EAAE7N,SAAS,CAAC8P,IAfN;AAgBff,EAAAA,mBAAmB,EAAE/O,SAAS,CAAC8P,IAhBhB;AAiBfhB,EAAAA,gBAAgB,EAAE9O,SAAS,CAAC8P,IAjBb;AAkBfd,EAAAA,gBAAgB,EAAEhP,SAAS,CAAC8P,IAlBb;AAmBfZ,EAAAA,mBAAmB,EAAElP,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CAnBN;AAoBfe,EAAAA,YAAY,EAAEzC,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CApBC;AAqBf2N,EAAAA,kBAAkB,EAAErP,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CArBL;AAsBfW,EAAAA,WAAW,EAAErC,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CAAD,EAAiC1B,SAAS,CAACrF,MAA3C,CAApB,CAtBE;AAuBfwU,EAAAA,mBAAmB,EAAEnP,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CAvBN;AAwBfU,EAAAA,YAAY,EAAEpC,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CAxBC;AAyBfkE,EAAAA,OAAO,EAAE5F,SAAS,CAAC+P,IAzBJ;AA0BfjK,EAAAA,aAAa,EAAE9F,SAAS,CAAC+P,IA1BV;AA2Bf7G,EAAAA,QAAQ,EAAElJ,SAAS,CAAC+P,IA3BL;AA4Bf9I,EAAAA,OAAO,EAAEjH,SAAS,CAAC+P,IA5BJ;AA6Bf9J,EAAAA,QAAQ,EAAEjG,SAAS,CAAC+P,IA7BL;AA8BfvH,EAAAA,MAAM,EAAExI,SAAS,CAAC+P,IA9BH;AA+BfxH,EAAAA,QAAQ,EAAEvI,SAAS,CAAC+P,IA/BL;AAgCfxN,EAAAA,UAAU,EAAEvC,SAAS,CAACgQ,OAAV,CAAkBtO,WAAlB,CAhCG;AAiCf+H,EAAAA,YAAY,EAAEzJ,SAAS,CAAC+P,IAjCT;AAkCfpG,EAAAA,YAAY,EAAE3J,SAAS,CAAC+P,IAlCT;AAmCflG,EAAAA,YAAY,EAAE7J,SAAS,CAAC+P,IAnCT;AAoCftM,EAAAA,WAAW,EAAEzD,SAAS,CAAC+P,IApCR;AAqCf/L,EAAAA,WAAW,EAAEhE,SAAS,CAAC+P,IArCR;AAsCfpL,EAAAA,UAAU,EAAE3E,SAAS,CAAC+P,IAtCP;AAuCflL,EAAAA,WAAW,EAAE7E,SAAS,CAAC+P,IAvCR;AAwCfhL,EAAAA,SAAS,EAAE/E,SAAS,CAAC+P,IAxCN;AAyCf3K,EAAAA,MAAM,EAAEpF,SAAS,CAAC+P,IAzCH;AA0CfhC,EAAAA,cAAc,EAAE/N,SAAS,CAAC+P,IA1CX;AA2CfjC,EAAAA,MAAM,EAAE9N,SAAS,CAACrF,MA3CH;AA4CfiT,EAAAA,YAAY,EAAE5N,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAACuD,IAAX,EAAiBvD,SAAS,CAAC+P,IAA3B,CAApB;AA5CC,CAAjB;AA8CAjO,IAAI,CAACmO,YAAL,GAAoB;AAClB9C,EAAAA,SAAS,EAAE,SADO;AAElBG,EAAAA,QAAQ,EAAE,KAFQ;AAGlBI,EAAAA,QAAQ,EAAE,IAHQ;AAIlBrC,EAAAA,UAAU,EAAE,IAJM;AAKlBnF,EAAAA,QAAQ,EAAE,KALQ;AAMlBkF,EAAAA,SAAS,EAAE,KANO;AAOlBiB,EAAAA,QAAQ,EAAE,KAPQ;AAQlBrF,EAAAA,aAAa,EAAE,KARG;AASlB6G,EAAAA,SAAS,EAAE,KATO;AAUlBkB,EAAAA,mBAAmB,EAAE,IAVH;AAWlBD,EAAAA,gBAAgB,EAAE,KAXA;AAYlBE,EAAAA,gBAAgB,EAAE,KAZA;AAalBE,EAAAA,mBAAmB,EAAE,EAbH;AAclBG,EAAAA,kBAAkB,EAAE,EAdF;AAelBF,EAAAA,mBAAmB,EAAE;AAfH,CAApB;AAiBArN,IAAI,CAACN,QAAL,GAAgBA,QAAhB;AACApB,QAAQ,CAAC0B,IAAD,CAAR;AACA,eAAeA,IAAf","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nvar keyPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities,\n          treeData = _this$state.treeData;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n      var flattenNodes = flattenTreeData(treeData, newExpandedKeys);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities),\n        expandedKeys: newExpandedKeys,\n        flattenNodes: flattenNodes\n      });\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: convertNodePropsToEventData(_this.dragNode.props),\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var treeData = _this.state.treeData;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Update selected keys\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n          _this.setUncontrolledState({\n            flattenNodes: newFlattenTreeData\n          });\n        }) : null;\n      }\n\n      return null;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps), {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread({}, newState, {}, forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(keyPropType),\n  expandedKeys: PropTypes.arrayOf(keyPropType),\n  defaultCheckedKeys: PropTypes.arrayOf(keyPropType),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(keyPropType), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(keyPropType),\n  selectedKeys: PropTypes.arrayOf(keyPropType),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(keyPropType),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  motion: PropTypes.object,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\npolyfill(Tree);\nexport default Tree;"]},"metadata":{},"sourceType":"module"}