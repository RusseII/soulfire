{"ast":null,"code":"var _jsxFileName = \"/Users/russell/code/soulfire/soulfire/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nconst ranks = {\n  \"Corporal\": 25000000,\n  \"Sergant\": 100000000,\n  \"Lieutenant\": 250000000,\n  \"Captain\": 400000000,\n  \"General\": 500000000\n};\nconst rankArray = Object.keys(ranks);\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Current Rank',\n  dataIndex: 'rank',\n  key: 'rank'\n}, {\n  title: 'Experience',\n  dataIndex: 'experience',\n  key: 'experience',\n  render: record => record.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") // render (data): datatoString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n\n}];\n\nfunction App() {\n  const [membersWhoNeedRank, setMembersWhoNeedRank] = useState([]);\n  useEffect(() => {\n    const getClanMembers = async () => {\n      const soulfireMembers = await fetch('https://api.russell.work/runescape');\n      console.log(soulfireMembers);\n      const members = await soulfireMembers.json();\n      const membersUpgrade = [];\n      console.log(members);\n      members.body.forEach(member => {\n        const memberRankIndex = rankArray.findIndex(rank => rank === member.rank);\n\n        if (memberRankIndex >= 0 && memberRankIndex < rankArray.length - 1) {\n          const memberNextRank = rankArray[memberRankIndex + 1];\n          const memberNextRankXp = ranks[memberNextRank];\n\n          if (memberNextRankXp < member.experience) {\n            console.log(member.name + \" \", \"Rank: \" + member.rank + \" \", member.experience.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n            membersUpgrade.push(member);\n          }\n        }\n      });\n      setMembersWhoNeedRank(membersUpgrade);\n    };\n\n    getClanMembers();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"List of everyone who can rank up based on their current XP\"), /*#__PURE__*/React.createElement(Table, {\n    dataSource: membersWhoNeedRank,\n    columns: columns,\n    pagination: false,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), \";\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/russell/code/soulfire/soulfire/src/App.js"],"names":["React","useEffect","useState","Table","Typography","ranks","rankArray","Object","keys","columns","title","dataIndex","key","render","record","toString","replace","App","membersWhoNeedRank","setMembersWhoNeedRank","getClanMembers","soulfireMembers","fetch","console","log","members","json","membersUpgrade","body","forEach","member","memberRankIndex","findIndex","rank","length","memberNextRank","memberNextRankXp","experience","name","push"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Table, Typography } from 'antd'\nimport 'antd/dist/antd.css'\n\n\n\nconst ranks = {\"Corporal\": 25000000, \"Sergant\": 100000000, \"Lieutenant\":250000000,\"Captain\": 400000000, \"General\": 500000000}\n\nconst rankArray = Object.keys(ranks)\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Current Rank',\n    dataIndex: 'rank',\n    key: 'rank',\n  },\n  {\n    title: 'Experience',\n    dataIndex: 'experience',\n    key: 'experience',\n    render: (record) => record.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    // render (data): datatoString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n  },\n];\n\nfunction App() {\n  const [membersWhoNeedRank, setMembersWhoNeedRank] = useState([])\n  useEffect(() => {\n\n    const getClanMembers = async () => {\n      const soulfireMembers = await fetch('https://api.russell.work/runescape')\n      console.log(soulfireMembers)\n      const members = await soulfireMembers.json()\n      const membersUpgrade = []\n      console.log(members)\n    \n        members.body.forEach( (member) => {\n     \n        const memberRankIndex = rankArray.findIndex(rank => rank === member.rank)\n        if ((memberRankIndex >= 0) && memberRankIndex < (rankArray.length - 1)) {\n            const memberNextRank = rankArray[memberRankIndex + 1]\n            const memberNextRankXp = ranks[memberNextRank]\n            if (memberNextRankXp < member.experience) {\n                console.log(member.name + \" \", \"Rank: \" + member.rank + \" \" , member.experience.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n                membersUpgrade.push(member)\n            }\n        }\n    })\n    setMembersWhoNeedRank(membersUpgrade)\n    }\n    getClanMembers()\n\n  }, [])\n  return (\n    <div>\n      {/* {membersWhoNeedRank.map((member) => <li>{member.name + \"   \" + \"Rank: \" + member.rank + \"     \" + member.experience}</li>)} */}\n      <Typography.Title>List of everyone who can rank up based on their current XP</Typography.Title>\n      <Table dataSource={membersWhoNeedRank} columns={columns} pagination={false} size='small' />;\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}