{"ast":null,"code":"import _regeneratorRuntime from\"/Users/russell/code/soulfire/soulfire/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/russell/code/soulfire/soulfire/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/russell/code/soulfire/soulfire/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Table,Typography}from'antd';import'antd/dist/antd.css';var ranks={\"Corporal\":25000000,\"Sergant\":100000000,\"Lieutenant\":250000000,\"Captain\":400000000,\"General\":500000000};var rankArray=Object.keys(ranks);var columns=[{title:'Name',dataIndex:'name',key:'name'},{title:'Current Rank',dataIndex:'rank',key:'rank'},{title:'Experience',dataIndex:'experience',key:'experience',render:function render(record){return record.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");}// render (data): datatoString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n}];function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),membersWhoNeedRank=_useState2[0],setMembersWhoNeedRank=_useState2[1];useEffect(function(){var getClanMembers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var soulfireMembers,members,membersUpgrade;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://api.russell.work/runescape');case 2:soulfireMembers=_context.sent;console.log(soulfireMembers);_context.next=6;return soulfireMembers.json();case 6:members=_context.sent;membersUpgrade=[];console.log(members);members.body.forEach(function(member){var memberRankIndex=rankArray.findIndex(function(rank){return rank===member.rank;});if(memberRankIndex>=0&&memberRankIndex<rankArray.length-1){var memberNextRank=rankArray[memberRankIndex+1];var memberNextRankXp=ranks[memberNextRank];if(memberNextRankXp<member.experience){console.log(member.name+\" \",\"Rank: \"+member.rank+\" \",member.experience.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"));membersUpgrade.push(member);}}});setMembersWhoNeedRank(membersUpgrade);case 11:case\"end\":return _context.stop();}}},_callee);}));return function getClanMembers(){return _ref.apply(this,arguments);};}();getClanMembers();},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography.Title,null,\"List of everyone who can rank up based on their current XP\"),/*#__PURE__*/React.createElement(Table,{dataSource:membersWhoNeedRank,columns:columns,pagination:false,size:\"small\"}),\";\");}export default App;","map":{"version":3,"sources":["/Users/russell/code/soulfire/soulfire/src/App.js"],"names":["React","useEffect","useState","Table","Typography","ranks","rankArray","Object","keys","columns","title","dataIndex","key","render","record","toString","replace","App","membersWhoNeedRank","setMembersWhoNeedRank","getClanMembers","fetch","soulfireMembers","console","log","json","members","membersUpgrade","body","forEach","member","memberRankIndex","findIndex","rank","length","memberNextRank","memberNextRankXp","experience","name","push"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,MAAlC,CACA,MAAO,oBAAP,CAIA,GAAMC,CAAAA,KAAK,CAAG,CAAC,WAAY,QAAb,CAAuB,UAAW,SAAlC,CAA6C,aAAa,SAA1D,CAAoE,UAAW,SAA/E,CAA0F,UAAW,SAArG,CAAd,CAEA,GAAMC,CAAAA,SAAS,CAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB,CAEA,GAAMI,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,MADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CADc,CAMd,CACEF,KAAK,CAAE,cADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CANc,CAWd,CACEF,KAAK,CAAE,YADT,CAEEC,SAAS,CAAE,YAFb,CAGEC,GAAG,CAAE,YAHP,CAIEC,MAAM,CAAE,gBAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,CAAmD,GAAnD,CAAZ,EACR;AALF,CAXc,CAAhB,CAoBA,QAASC,CAAAA,GAAT,EAAe,eACuCf,QAAQ,CAAC,EAAD,CAD/C,wCACNgB,kBADM,eACcC,qBADd,eAEblB,SAAS,CAAC,UAAM,CAEd,GAAMmB,CAAAA,cAAc,0FAAG,oMACSC,CAAAA,KAAK,CAAC,oCAAD,CADd,QACfC,eADe,eAErBC,OAAO,CAACC,GAAR,CAAYF,eAAZ,EAFqB,sBAGCA,CAAAA,eAAe,CAACG,IAAhB,EAHD,QAGfC,OAHe,eAIfC,cAJe,CAIE,EAJF,CAKrBJ,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAEEA,OAAO,CAACE,IAAR,CAAaC,OAAb,CAAsB,SAACC,MAAD,CAAY,CAElC,GAAMC,CAAAA,eAAe,CAAGzB,SAAS,CAAC0B,SAAV,CAAoB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAKH,MAAM,CAACG,IAApB,EAAxB,CAAxB,CACA,GAAKF,eAAe,EAAI,CAApB,EAA0BA,eAAe,CAAIzB,SAAS,CAAC4B,MAAV,CAAmB,CAApE,CAAwE,CACpE,GAAMC,CAAAA,cAAc,CAAG7B,SAAS,CAACyB,eAAe,CAAG,CAAnB,CAAhC,CACA,GAAMK,CAAAA,gBAAgB,CAAG/B,KAAK,CAAC8B,cAAD,CAA9B,CACA,GAAIC,gBAAgB,CAAGN,MAAM,CAACO,UAA9B,CAA0C,CACtCd,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACQ,IAAP,CAAc,GAA1B,CAA+B,SAAWR,MAAM,CAACG,IAAlB,CAAyB,GAAxD,CAA8DH,MAAM,CAACO,UAAP,CAAkBtB,QAAlB,GAA6BC,OAA7B,CAAqC,uBAArC,CAA8D,GAA9D,CAA9D,EACAW,cAAc,CAACY,IAAf,CAAoBT,MAApB,EACH,CACJ,CACJ,CAXG,EAYJX,qBAAqB,CAACQ,cAAD,CAArB,CAnBuB,uDAAH,kBAAdP,CAAAA,cAAc,0CAApB,CAqBAA,cAAc,GAEf,CAzBQ,CAyBN,EAzBM,CAAT,CA0BA,mBACE,4CAEE,oBAAC,UAAD,CAAY,KAAZ,mEAFF,cAGE,oBAAC,KAAD,EAAO,UAAU,CAAEF,kBAAnB,CAAuC,OAAO,CAAET,OAAhD,CAAyD,UAAU,CAAE,KAArE,CAA4E,IAAI,CAAC,OAAjF,EAHF,KADF,CAOD,CAED,cAAeQ,CAAAA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Table, Typography } from 'antd'\nimport 'antd/dist/antd.css'\n\n\n\nconst ranks = {\"Corporal\": 25000000, \"Sergant\": 100000000, \"Lieutenant\":250000000,\"Captain\": 400000000, \"General\": 500000000}\n\nconst rankArray = Object.keys(ranks)\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Current Rank',\n    dataIndex: 'rank',\n    key: 'rank',\n  },\n  {\n    title: 'Experience',\n    dataIndex: 'experience',\n    key: 'experience',\n    render: (record) => record.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    // render (data): datatoString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n  },\n];\n\nfunction App() {\n  const [membersWhoNeedRank, setMembersWhoNeedRank] = useState([])\n  useEffect(() => {\n\n    const getClanMembers = async () => {\n      const soulfireMembers = await fetch('https://api.russell.work/runescape')\n      console.log(soulfireMembers)\n      const members = await soulfireMembers.json()\n      const membersUpgrade = []\n      console.log(members)\n    \n        members.body.forEach( (member) => {\n     \n        const memberRankIndex = rankArray.findIndex(rank => rank === member.rank)\n        if ((memberRankIndex >= 0) && memberRankIndex < (rankArray.length - 1)) {\n            const memberNextRank = rankArray[memberRankIndex + 1]\n            const memberNextRankXp = ranks[memberNextRank]\n            if (memberNextRankXp < member.experience) {\n                console.log(member.name + \" \", \"Rank: \" + member.rank + \" \" , member.experience.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n                membersUpgrade.push(member)\n            }\n        }\n    })\n    setMembersWhoNeedRank(membersUpgrade)\n    }\n    getClanMembers()\n\n  }, [])\n  return (\n    <div>\n      {/* {membersWhoNeedRank.map((member) => <li>{member.name + \"   \" + \"Rank: \" + member.rank + \"     \" + member.experience}</li>)} */}\n      <Typography.Title>List of everyone who can rank up based on their current XP</Typography.Title>\n      <Table dataSource={membersWhoNeedRank} columns={columns} pagination={false} size='small' />;\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}